{"version":3,"sources":["assets/profile_pic.jpg","pages/About.js","component/todos.js","component/AddTodo.js","pages/Home.js","component/navigation/NavbarComp.js","App.js","index.js"],"names":["About","class","className","src","profile_pic","alt","Component","Todos","todos","deleteTodo","todoList","length","map","todo","color","Date","duedate","console","log","Grid","Card","content","style","marginTop","background","ListItemButton","component","href","Checkbox","paddingLeft","onClick","id","ListItemText","primary","secondary","padding","AddTodo","handleChange","event","setState","target","value","date","toLocaleString","handleDateChange","toLocaleDateString","handleSubmit","preventDefault","state","trim","props","addTodo","TextField","label","variant","onChange","this","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","renderInput","params","Button","marginLeft","Home","filter","find","t","Math","random","new_list","NavbarComp","Navbar","bg","expand","Container","Toggle","Collapse","Nav","Link","as","to","exact","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54dc123a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile_pic.536fd505.jpg\";","import React, { Component } from \"react\";\nimport \"./About.css\";\nimport profile_pic from \"../assets/profile_pic.jpg\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        {/* <p>Design your About me page </p> */}\n        <div class=\"split left\">\n          <div className=\"centered\">\n            <img\n              className=\"profile_image\"\n              src={profile_pic}\n              alt=\"Profile Pic\"\n            ></img>\n          </div>\n        </div>\n        <div className=\"split right\">\n          <div className=\"centered\">\n            <div className=\"name_title\">Your Name</div>\n            <div className=\"brief_description\">\n              Tell us about yourself in a few sentences. Tell us your interests\n              and say a fun fact about yourself.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../component/todos.css\";\nimport { Card, Grid, ListItemButton, ListItemText, Checkbox} from \"@mui/material\";\n\n// 1. This component formats and returns the list of todos.\n// 2. Treat the question mark like an if statement.\n// If the todos array has items in the list [todos.length], we want to return the list\n// Else, return a message saying \"You have no todo's left\"\n// 3. The map function is called to assign each array item with a key\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\n// a key, and it's own card shown in the UI\nconst Todos = ({ todos, deleteTodo }) => {\n  const todoList = todos.length ? (\n    todos.map((todo) => {\n      let color = \"#ffffffff\"\n      if (new Date(todo.duedate) < new Date()){\n        color = 'red'\n      }\n      console.log(color)\n      return (\n        <Grid key={todo.id}>\n          <Card data-testid={todo.content} style={{marginTop:10, background: color}}>\n            {/* Remember, we set the local state of this todo item when the user submits the form in \n            AddTodo.js. All we need to do is return the todo list item {todo.content} as well as its \n            current date/time {todo.date}. Also, the item's id is utilized in order to correctly delete an item from the Todo list*/}\n            <ListItemButton component=\"a\" href=\"#simple-list\">\n              <Checkbox style={{paddingLeft:0}} color=\"primary\" onClick={() => deleteTodo(todo.id)}/>\n              <ListItemText primary={todo.content} secondary={todo.duedate}/>\n            </ListItemButton>\n          </Card>\n        </Grid>\n      );\n    })\n  ) : (\n    <p>You have no todo's left </p>\n  );\n  // Lastly, return the todoList constant that we created above to show all of the items on the screen.\n  return (\n    <div className=\"todoCollection\" style={{ padding: \"10px\" }}>\n      {todoList}\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { DesktopDatePicker , LocalizationProvider} from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nclass AddTodo extends Component {\n  // Create a local react state of the this component with both content date property set to nothing.\n  constructor() {\n    super();\n    this.state = {\n      content: \"\",\n      date: \"\",\n      duedate: null\n    };\n  }\n  // The handleChange function updates the react state with the new input value provided from the user and the current date/time.\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\n  // into the text field.\n  handleChange = (event) => {\n    this.setState({\n      content: event.target.value,\n      date: Date().toLocaleString('en-US')\n    });\n  };\n\n  handleDateChange = (event) => {\n    let date = null\n    if(event != null){\n      date = new Date(event).toLocaleDateString()\n    }\n    this.setState({\n      duedate: date\n    });\n  };\n  // The handleSubmit function collects the forms input and puts it into the react state.\n  // event.preventDefault() is called to prevents default event behavior like refreshing the browser.\n  // this.props.addTodo(this.state) passes the current state (or user input and current date/time) into the addTodo function defined\n  // in the Home.js file which then adds the input into the list.\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.content.trim()) {\n      this.props.addTodo(this.state);\n      this.setState({\n        content: \"\",\n        date: \"\",\n        duedate: null\n      });\n    }\n  };\n  render() {\n    return (\n      // 1. When rendering a component, you can render as many elements as you like as long as it is wrapped inside\n      // one div element.\n      // 2. The return statement should include a text field input with the handleChange function from above that\n      // is passed into an onChange event.\n      // 3. The return should also include a button with the handleSubmit function from above that is passed into\n      // an OnClick event.\n      // 4. The value of the text field also should reflect the local state of this component.\n      <div>\n        <TextField\n          label=\"Add New Item\"\n          variant=\"outlined\"\n          onChange={this.handleChange}\n          value={this.state.content}\n        />\n        <LocalizationProvider dateAdapter={AdapterDateFns}>         \n          <DesktopDatePicker\n              id=\"new-item-date\"\n              label=\"Due Date\"\n              value={this.state.duedate}\n              onChange={this.handleDateChange}\n              renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <Button\n          style={{ marginLeft: \"10px\" }}\n          onClick={this.handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\nimport Todos from \"../component/todos\";\nimport AddTodo from \"../component/AddTodo\";\nimport \"../pages/Home.css\";\n\nclass Home extends Component {\n  // Create a default state of this component with an empty list of todos.\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  // the deleteTodo function simply creates a new array that removes the todo item selected from the user from the list\n  // and then updates the state with the new list.\n  deleteTodo = (id) => {\n    // Within this function, the item's id is being utilized in order to filter it out from the todo list\n    // and then updates the state with a new list\n    const todos = this.state.todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos: todos,\n    });\n  };\n\n  // the addTodo function simply creates a new array that includes the user submitted todo item and then\n  // updates the state with the new list.\n  addTodo = (todo) => {\n    const exists = this.state.todos.find(t => t.content === todo.content);\n    if (exists || todo.duedate == null || todo.duedate === \"Invalid Date\"){ return }\n    // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\n    // should not share duplicate values.\n    // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\n    // This solution works for a small application but a more complex hashing function should be used when\n    // dealing with a larger data sensitive project.\n    todo.id = Math.random();\n    // Create a array that contains the current array and the new todo item\n    let new_list = [...this.state.todos, todo];\n    // Update the local state with the new array.\n    this.setState({\n      todos: new_list,\n    });\n  };\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Todo's </h1>\n        {/* When passing the AddTodo component, addTodo is a prop that is used in the \n        AddTodo.js file when handling the submit */}\n        <AddTodo addTodo={this.addTodo} />\n        {/* When returning the Todos component, todos is a prop passed to the todos.js file\n         to format and render the current todo list state */}\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\n\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route, \n    Link\n} from \"react-router-dom\"\nimport About from \"../../pages/About\";\nimport Home from \"../../pages/Home\";\n\nexport default class NavbarComp extends Component {\n    render() {\n        return (\n            <Router>\n            <div>\n            <Navbar bg=\"dark\" variant={\"dark\"} expand=\"lg\">\n                <Container>\n                    {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link as={Link} to={\"/\"}> Home </Nav.Link>\n                        <Nav.Link as={Link} to={\"/about\"}>About</Nav.Link>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            </div>\n            <div>\n                <Routes>\n                <Route exact path=\"/\" element={<Home/>}/>\n                <Route exact path=\"/about\" element={<About/>}/>\n                </Routes>\n            </div>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NavbarComp from './component/navigation/NavbarComp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComp/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}